def checkProfileSingularity(path){
  if (new File(path).exists()){
    File directory = new File(path)
    def contents = []
    directory.eachFileRecurse (groovy.io.FileType.FILES){ file -> contents << file }
    if (!path?.trim() || contents == null || contents.size() == 0){
      System.out.println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
      System.exit(-1)
    }
  }else{
    System.out.println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
    System.exit(-1)
  }
}

singularity {
  enabled = true
  autoMounts = true
  runOptions = "--containall ${(params.geniac.containers?.singularityRunOptions ?: '').replace('-C', '').replace('--containall', '')}"
}

process {
  checkProfileSingularity("${params.geniac.singularityImagePath}")
  withLabel:bowtie2{ container = "${params.geniac.singularityImagePath}/bowtie2.sif" }
  withLabel:bowtie{ container = "${params.geniac.singularityImagePath}/bowtie.sif" }
  withLabel:deeptools{ container = "${params.geniac.singularityImagePath}/deeptools.sif" }
  withLabel:dupradar{ container = "${params.geniac.singularityImagePath}/dupradar.sif" }
  withLabel:fastqc{ container = "${params.geniac.singularityImagePath}/fastqc.sif" }
  withLabel:featurecounts{ container = "${params.geniac.singularityImagePath}/featurecounts.sif" }
  withLabel:gffcompare{ container = "${params.geniac.singularityImagePath}/gffcompare.sif" }
  withLabel:hisat2{ container = "${params.geniac.singularityImagePath}/hisat2.sif" }
  withLabel:htseq{ container = "${params.geniac.singularityImagePath}/htseq.sif" }
  withLabel:identito{ container = "${params.geniac.singularityImagePath}/identito.sif" }
  withLabel:multiqc{ container = "${params.geniac.singularityImagePath}/multiqc.sif" }
  withLabel:onlyLinux{ container = "${params.geniac.singularityImagePath}/onlylinux.sif" }
  withLabel:picard{ container = "${params.geniac.singularityImagePath}/picard.sif" }
  withLabel:preseq{ container = "${params.geniac.singularityImagePath}/preseq.sif" }
  withLabel:python{ container = "${params.geniac.singularityImagePath}/python.sif" }
  withLabel:qualimap{ container = "${params.geniac.singularityImagePath}/qualimap.sif" }
  withLabel:r{ container = "${params.geniac.singularityImagePath}/r.sif" }
  withLabel:rseqc{ container = "${params.geniac.singularityImagePath}/rseqc.sif" }
  withLabel:salmon{ container = "${params.geniac.singularityImagePath}/salmon.sif" }
  withLabel:samtools{ container = "${params.geniac.singularityImagePath}/samtools.sif" }
  withLabel:scallop{ container = "${params.geniac.singularityImagePath}/scallop.sif" }
  withLabel:star{ container = "${params.geniac.singularityImagePath}/star.sif" }
  withLabel:stringtie{ container = "${params.geniac.singularityImagePath}/stringtie.sif" }
  withLabel:trimgalore{ container = "${params.geniac.singularityImagePath}/trimgalore.sif" }
  withLabel:unix{ container = "${params.geniac.singularityImagePath}/unix.sif" }
  withLabel:xengsort{ container = "${params.geniac.singularityImagePath}/xengsort.sif" }
}
