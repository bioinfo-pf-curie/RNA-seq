def checkProfileMultipath(path){
  File directory = new File(path)
  def contents = []
  directory.eachFileRecurse (groovy.io.FileType.FILES) { file -> contents << file }
  if (!path?.trim() || contents == null || contents.size() == 0){
     println "   ### ERROR ###   The option '-profile multipath' requires the configuration of each tool path. See `--globalPath` for advanced usage."
     System.exit(-1)
  }
}

singularity {
  enable = false
}

docker {
  enable = false
}

process {
  checkProfileMultipath(${params.geniac.multiPath} ? "${params.geniac.multiPath}" : "${baseDir}/../multipath" )
  withLabel:python { beforeScript = ${params.geniac.multiPath} ? "export PATH=${params.geniac.multiPath}/python/bin:$PATH" : "export PATH=${baseDir}/../multipath/python/bin:$PATH" }
  withLabel:multiqc { beforeScript = ${params.geniac.multiPath} ? "export PATH=${params.geniac.multiPath}/multiqc/bin:$PATH" : "export PATH=${baseDir}/../multipath/multiqc/bin:$PATH" }
}

