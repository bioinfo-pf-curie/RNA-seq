def checkProfileSingularity(path){
  File directory = new File(path)
  def contents = []
  directory.eachFileRecurse (groovy.io.FileType.FILES) { file -> contents << file }
  if (!path?.trim() || contents == null || contents.size() == 0){
     println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
     System.exit(-1)
  }
}

singularity {
  enable = true
  autoMounts = true
  runOptions = "${params.singularityRunOptions}"
}

process {
  checkProfileSingularity(${params.geniac.containers.singularityImagePath} ? "${params.geniac.containers.singularityImagePath}" : "${baseDir}/../containers/singularity")
  withLabel:python { container = ${params.geniac.containers.singularityImagePath} ? "${params.geniac.containers.singularityImagePath}/python.simg" : "${baseDir}/../containers/singularity/python.simg" }
  withLabel:multiqc { container = ${params.geniac.containers.singularityImagePath} ? "${params.geniac.containers.singularityImagePath}/multiqc.simg" : "${baseDir}/../containers/singularity/multiqc.simg" }
}

